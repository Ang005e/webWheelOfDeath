@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using LibWheelOfDeath
@using System.Data
@using Microsoft.Data.SqlClient
@using LibEntity


<div id="modal-game-selection-id" class="modal-canvas @(true==false ? "hidden" : "")"> @*TODO: remove false, replace with check if game has been selected*@ 
    <div class="main-panel modal-player">
        <span class="close-popup">&#10006;</span>
        <form>
            <fieldset>
                <fieldset>
                    <label for="cboGameSelect">Select Game Mode</label>
                    <select name="cboGameSelect" id="cboGameSelect">
                        @{
                            string sql = @"
                        select
                        G.[Id], G.[Game], G.[FkDifficultyId], D.[Difficulty], D.[Id]
                        from
                        tblGame G inner join
                        tblDifficulty D on D.[Id] = G.[FkDifficultyId]
                        where
                        (1=1)
                        order by
                        D.[Id],
                        G.[Game]
                        ";
                            DataTable table = sql.Fetch<DataTable>();
                            DataRow row = table.Rows[0];
                            int counter = 0;

                            while (counter < table.Rows.Count)
                            {
                                string? difficultyName = row.Field<string>("Difficulty") ?? "";

                                long difficultyId = row.Field<long>("FkDifficultyId"); ;
                                long lastDifficultyId = difficultyId;

                                if (difficultyName == "") break;

                                <optgroup label="@difficultyName">
                                    @{
                                        while ((difficultyId == lastDifficultyId) && (counter < table.Rows.Count))
                                        {
                                            row = table.Rows[counter];
                                            difficultyId = row.Field<long>("FkDifficultyId");
                                            string? gameName = row.Field<string>("Game") ?? "";

                                            if (gameName == "") break;

                                            <option>@gameName</option>

                                            difficultyId = row.Field<long>("FkDifficultyId");

                                            counter++;
                                        }
                                        lastDifficultyId = difficultyId;
                                    }
                                </optgroup>
                            }
                        }

                    </select>
                </fieldset>
            </fieldset>
            <button type="button" name="btnConfirm" id="btnBeginGame" class="ornate">Confirm</button>
        </form>
    </div>
</div>

<div id="modal-winner-id" class="modal-canvas hidden">
    <div class="main-panel modal-winner">
        <span class="close-popup">&#10006;</span>
        <form>
            <fieldset>
                <legend>Congratulations - You Won!</legend>

                <label for="numElapsedTime">Your Time (sec):</label>
                <output name="numElapsedTime" id="numElapsedTime"></output>

                <label for="numHits">Hits:</label>
                <output name="numHits" id="numHits"></output>

                <label for="numMisses">Misses:</label>
                <output name="numMisses" id="numMisses"></output>

                <output name="txtMiscMessage"></output>
            </fieldset>
        </form>
    </div>
</div>

<script type="module" defer="defer">
    'use strict';
	import { CWheelGame } from "/js/CWheelGame.js";
    import { CMessageModal } from "/js/CAppModals.js";


    let _game;

    try {

        // get duration, throws, min and max balloons from session variable set in controller.
        _game = new CWheelGame('@Context.Session.GetString("user-name")', 10000, 2, 10, 20);

            document.addEventListener('game-over', event => {
                console.log(`Status: ${event.detail.gameStatus} Elapsed: ${event.detail.elapsed}`);
            });

    } catch (e) {
        new CMessageModal('#modal-message-id').display(e.message, false, 7000);
    }
</script>
